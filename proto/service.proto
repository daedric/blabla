syntax = "proto3";

package services.blabla;

option go_package = "github.com/daedric/blabla/go";

enum MsgType
{
    UNUSED = 0;
    PING = 1;
    PONG = 2;
    SUSCRIBE_REQUEST = 3;
    MESSAGE = 4;
    ERROR = 5;
}

message Header {
    MsgType type = 1;
}

message DecodableMessage {
    Header type = 1;
}

message SubscribeRequest {
    message Subscription {
        enum Type {
            SUBSCRIBE = 0;
            UNSUBSCRIBE = 1; // XXX: not tested
            UNSUBSCRIBE_ALL = 2; // XXX: not tested
        }
        Type type = 1;
        string route_prefix = 2;
        int32 correlation_id = 3; // sent back to the consumer.
    }

    Header header = 1;
    repeated Subscription subscriptions = 2;
}

message ProducerMessageHeader {
    Header header = 1;
    string route = 2;
    uint32 message_size = 3;
}

message ConsumerMessageHeader {
    Header header = 1;
    string route = 2;
    uint32 message_size = 3;
    int32 correlation_id = 4;
}

message Ping {
    Header header = 1;
    uint32 correlation_id = 2;
}

message Pong {
    Header header = 1;
    uint32 correlation_id = 2;
}

message Error {
    Header header = 1;

    // XXX: split protocol errors and logical errors.
    enum ErrorType {
        NO_ERROR = 0;
        PAYLOAD_TOO_BIG = 1;
        PAYLOAD_TOO_SHORT = 2;
        INVALID_MESSAGE = 3;
        UNKNOWN_TYPE = 4;
        UNKNOWN_OPERATION = 5;
        NOT_IMPLEMENTED = 6;
    }

    ErrorType type = 2;
    string description = 3;
}